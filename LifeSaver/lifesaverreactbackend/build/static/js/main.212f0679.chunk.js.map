{"version":3,"sources":["img/gfx/title.png","img/level/mainmenu.png","img/level/test.png","img/level/test2.png","img/eval/Survey Person1.png","img/eval/Survey Person2.png","img/eval/Survey Person3.png","img/eval/Survey Person1 After.png","img/eval/Survey Person2 After.png","img/eval/Survey Person3 After.png","img/paramedic/map1.png","img/paramedic/building1.jpg","img/paramedic/building2.jpg","img/paramedic/building3.jpg","img/paramedic/cpr1.jpg","img/paramedic/cpr2.jpg","img/paramedic/cpr3.jpg","img/paramedic/cpr4.jpg","img/paramedic/sign.jpg","img/other images/Blender Bookshelf.png","img/other images/Blender.jpg","img/other images/BlenderTable.png","img/logos/githubicon.png","stored/UserStore.js","stored/PageStore.js","InputField.js","SubmitButton.js","LoginForm.js","Register.js","ParticleMaker.js","ParticleMaker2.js","NavbarLogin.js","MainPages/Information.js","MainPages/Home.js","stored/AllUsers.js","MainPages/Admin.js","MainPages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","extendObservable","this","loading","isLoggedIn","admin","username","aboutme","home","information","login","register","profile","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","PageStore","alert","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","window","location","reload","resetForm","msg","console","log","setInputValue","doLogin","ToRegister","Register","email","passwordconf","Submit","bind","Modalfunct","useState","show","setShow","Button","variant","width","Modal","onHide","Header","closeButton","Title","Body","href","block","Footer","NavbarLogin","Navbar","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","ToHome","ToInfo","ToProfile","ToAdmin","doLogout","ToLogin","Information","Jumbotron","Home","src","title","alt","class","Image","mainmenu","fluid","test","test2","serveypersonone","serveypersontwo","serveypersonthree","serveypersononeaf","serveypersontwoaf","serveypersonthreeaf","building1","building2","building3","cpr1","cpr2","cpr3","cpr4","map","sign","Carousel","Item","bookshelf","Caption","sofa","table","github","Admin","AllUsers","SearchUser","deleteUser","editUser","Profile","passwordold","passwordnew","AboutMe","ChangePassword","App","Spinner","animation","observer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.212f0679.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.729b420f.png\";","module.exports = __webpack_public_path__ + \"static/media/mainmenu.bd5070d2.png\";","module.exports = __webpack_public_path__ + \"static/media/test.1f4e2052.png\";","module.exports = __webpack_public_path__ + \"static/media/test2.de6b04ff.png\";","module.exports = __webpack_public_path__ + \"static/media/Survey Person1.80589c30.png\";","module.exports = __webpack_public_path__ + \"static/media/Survey Person2.fbe25899.png\";","module.exports = __webpack_public_path__ + \"static/media/Survey Person3.3ebdbe47.png\";","module.exports = __webpack_public_path__ + \"static/media/Survey Person1 After.b22d3b90.png\";","module.exports = __webpack_public_path__ + \"static/media/Survey Person2 After.3f78117a.png\";","module.exports = __webpack_public_path__ + \"static/media/Survey Person3 After.f11b35a4.png\";","module.exports = __webpack_public_path__ + \"static/media/map1.d1793724.png\";","module.exports = __webpack_public_path__ + \"static/media/building1.28fb6230.jpg\";","module.exports = __webpack_public_path__ + \"static/media/building2.a6f86e66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/building3.e84200d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cpr1.b7dde3bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cpr2.62041af4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cpr3.e24c7ef8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cpr4.e1f5de5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign.fda705c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Blender Bookshelf.bc5716f5.png\";","module.exports = __webpack_public_path__ + \"static/media/Blender.bf95327f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BlenderTable.5f958b11.png\";","module.exports = __webpack_public_path__ + \"static/media/githubicon.ff1d322d.png\";","import { extendObservable } from 'mobx';\r\n\r\n/**\r\n * User Store\r\n */\r\n\r\nclass UserStore {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            admin: false,\r\n            username: '',\r\n            aboutme: ''\r\n\r\n        })\r\n    }\r\n}\r\nexport default new UserStore();","import { extendObservable } from 'mobx';\r\n\r\n/**\r\n * Page Store\r\n */\r\n\r\nclass PageStore {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            home: true,\r\n            information: false,\r\n            login: false,\r\n            register: false,\r\n            admin: false,\r\n            profile: false\r\n\r\n        })\r\n    }\r\n}\r\nexport default new PageStore();","import React from 'react';\r\nimport './App.css';\r\nclass InputField extends React.Component{\r\nrender() {\r\n    return (\r\n        <div className=\"inputf\">\r\n\r\n            <input\r\n                className='input'\r\n                type={this.props.type}\r\n                placeholder={this.props.placeholder}\r\n                value={this.props.value}\r\n                onChange={ (e) => this.props.onChange(e.target.value)}\r\n                />\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\nrender() {\r\n    return (\r\n        <div className=\"submitButton\">\r\n\r\n            <button\r\n                className='subbtn'\r\n                disabled={this.props.disabled}\r\n                onClick={ () => this.props.onClick() }\r\n            >\r\n                {this.props.text}\r\n            </button>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stored/UserStore';\r\nimport PageStore from './stored/PageStore';\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    ToRegister() {\r\n        if (!PageStore.register){\r\n            PageStore.home = false;\r\n            PageStore.information = false;\r\n            PageStore.login = false;\r\n            PageStore.register = true;\r\n            PageStore.admin = false;\r\n            PageStore.profile = false;\r\n        }\r\n    }\r\n\r\n    async doLogin() {\r\n\r\n        if (!this.state.username) {\r\n            alert(\"You must enter a username\");\r\n            return;\r\n        }\r\n        else if (!this.state.password) {\r\n            alert(\"You must enter a password\");\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n                window.location.reload();\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container3\">\r\n                <div className=\"loginform\">\r\n                    <p className=\"logintitle\"> Login </p>\r\n                        <InputField\r\n                            type='text'\r\n                            placeholder='Username'\r\n                            value={this.state.username ? this.state.username : ''}\r\n                            onChange={ (val) => this.setInputValue('username', val) }\r\n                        />\r\n                        <InputField\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            value={this.state.password ? this.state.password : ''}\r\n                            onChange={ (val) => this.setInputValue('password', val) }\r\n                        />\r\n                        <br></br>\r\n                        <SubmitButton\r\n                            text='Login'\r\n                            disabled={this.state.buttonDisabled}\r\n                            onClick={ () => this.doLogin() }\r\n                        />\r\n                        <br></br> \r\n                        <h3 className=\"white\">Don't have an account? Register here</h3>\r\n                        <SubmitButton\r\n                            text='Register'\r\n                            disabled={this.state.buttonDisabled}\r\n                            onClick={ () => this.ToRegister() }\r\n                        />     \r\n                </div>        \r\n            </div>        \r\n            );\r\n        }\r\n    }\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stored/UserStore';\r\n\r\nclass Register extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            aboutme: '',\r\n            username: '',\r\n            password: '',\r\n            passwordconf: '',\r\n            buttonDisabled: false\r\n        }\r\n        this.Submit = this.Submit.bind(this);\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            email: '',\r\n            username: '',\r\n            aboutme: '',\r\n            password: '',\r\n            passwordconf: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async Submit() {\r\n\r\n        if (!this.state.username) {\r\n            alert(\"You must enter a username\");\r\n            return;\r\n        }\r\n        else if (!this.state.password) {\r\n            alert(\"You must enter a password\");\r\n            return;\r\n        }\r\n        else if (!this.state.email) {\r\n            alert(\"You must enter a email\");\r\n            return;\r\n        }\r\n        else if (!this.state.aboutme) {\r\n            alert(\"You must enter a about yourself\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.passwordconf != this.state.password){\r\n            alert(\"Your passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.passwordconf != this.state.password){\r\n            alert(\"Password must contain at least 1 number, 1 uppercase letter and 1 lowercase letter\");\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res = await fetch('/register', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                    passwordconf: this.state.passwordconf,\r\n                    aboutme: this.state.aboutme,\r\n                    email: this.state.email\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n                console.log(\"registered\")\r\n                alert(\"your account has been created\");\r\n                window.location.reload();\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 20) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"registerform\">\r\n                <p className=\"logintitle\"> Register </p>\r\n                    <div className=\"container3\">\r\n                        <InputField\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={this.state.email ? this.state.email : ''}\r\n                            onChange={ (val) => this.setInputValue('email', val) }\r\n                        />\r\n                        <p className=\"othertext2\">We'll never share your email with anyone else.</p>\r\n\r\n                        <InputField\r\n                            type='text'\r\n                            placeholder=' Enter Username'\r\n                            value={this.state.username ? this.state.username : ''}\r\n                            onChange={ (val) => this.setInputValue('username', val) }\r\n                        />\r\n                        <InputField\r\n                            type='text'\r\n                            placeholder=' Enter something about yourself (keep it short and sweet)'\r\n                            value={this.state.aboutme ? this.state.aboutme : ''}\r\n                            onChange={ (val) => this.setInputValue('aboutme', val) }\r\n                        />\r\n                        <InputField\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={this.state.password ? this.state.password : ''}\r\n                            onChange={ (val) => this.setInputValue('password', val) }\r\n                        />\r\n                        <p className=\"othertext2\">Password must contain at least 1 number, 1 uppercase letter and 1 lowercase letter</p>\r\n                        <InputField\r\n                            type='password'\r\n                            placeholder='Re-enter Password'\r\n                            value={this.state.passwordconf ? this.state.passwordconf : ''}\r\n                            onChange={ (val) => this.setInputValue('passwordconf', val) }\r\n                        />\r\n                        <br></br>\r\n\r\n                        <SubmitButton\r\n                        text='Register'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.Submit() }\r\n                        />\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Particles from 'react-particles-js';\r\nclass ParticleMaker extends React.Component{\r\nrender() {\r\n    return (\r\n        <div className=\"particle\">\r\n\r\n        <Particles \r\n              params={{\r\n                particles: {\r\n                    number: {\r\n                        value: 160,\r\n                        density: {\r\n                            enable: false\r\n                        }\r\n                    },\r\n                    size: {\r\n                        value: 3,\r\n                        random: true,\r\n                        anim: {\r\n                            speed: 4,\r\n                            size_min: 0.3\r\n                        }\r\n                    },\r\n                    line_linked: {\r\n                        enable: false\r\n                    },\r\n                    move: {\r\n                        random: true,\r\n                        speed: 1,\r\n                        direction: \"top\",\r\n                        out_mode: \"out\"\r\n                    }\r\n                },\r\n                interactivity: {\r\n                    events: {\r\n                        onhover: {\r\n                            enable: true,\r\n                            mode: \"bubble\"\r\n                        },\r\n                        onclick: {\r\n                            enable: true,\r\n                            mode: \"repulse\"\r\n                        }\r\n                    },\r\n                    modes: {\r\n                        bubble: {\r\n                            distance: 30,\r\n                            duration: 5,\r\n                            size: 0,\r\n                            opacity: 0\r\n                        },\r\n                        repulse: {\r\n                            distance: 400,\r\n                            duration: 4\r\n                        }\r\n                    }\r\n                }\r\n              }}\r\n                ></Particles>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParticleMaker;","import React from 'react';\r\nimport './App.css';\r\nimport Particles from 'react-particles-js';\r\nclass ParticleMaker2 extends React.Component{\r\nrender() {\r\n    return (\r\n        <div className=\"particle\">\r\n\r\n        <Particles \r\n              params={{\r\n                particles: {\r\n                    number: {\r\n                        value: 160,\r\n                    },\r\n                    size: {\r\n                        value: 3,\r\n                        random: true,\r\n                        anim: {\r\n                            speed: 4,\r\n                            size_min: 0.3\r\n                        }\r\n                    }\r\n                },\r\n                interactivity: {\r\n                    events: {\r\n                        onhover: {\r\n                            enable: true,\r\n                            mode: \"repulse\"\r\n                        }\r\n                    }\r\n                }\r\n              }}\r\n                ></Particles>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ParticleMaker2;","import React, { useState } from 'react';\r\nimport UserStore from './stored/UserStore';\r\nimport PageStore from './stored/PageStore';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport SubmitButton from './SubmitButton';\r\n\r\nfunction Modalfunct(){\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n    <>\r\n        <Button variant=\"secondary\" width=\"10%\" onClick={handleShow}>\r\n        More Info\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title >More LifeSaverVR Info</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        LifeSaverVR was Created by Sean McSweeney as a final year project. In the future he hopes to keep developing on the website and the virtual reality application. \r\n        This website will give information such as the build version and future updates.\r\n        <br></br>\r\n        <br></br>\r\n        <Button variant=\"outline-dark\" href=\"https://github.com/SeanMcSweeney/LifeSaverVR-\" block >GitHub</Button>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n    );        \r\n}\r\n\r\nclass NavbarLogin extends React.Component{\r\n    async doLogout(){\r\n\r\n        try {\r\n    \r\n        let res = await fetch('/logout', {\r\n            method: 'post',\r\n            headers: {\r\n            'Accept' : 'application/json',\r\n            'Content-Type' : 'application/json'\r\n            }\r\n        });\r\n    \r\n        let result = await res.json();\r\n    \r\n        if (result && result.success){\r\n            UserStore.isLoggedIn = false;\r\n            UserStore.username = '';\r\n            window.location.reload();\r\n        }\r\n        }\r\n    \r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    ToHome() {\r\n        if (!PageStore.home){\r\n            PageStore.home = true;\r\n            PageStore.information = false;\r\n            PageStore.login = false;\r\n            PageStore.register = false;\r\n            PageStore.admin = false;\r\n            PageStore.profile = false;\r\n        }\r\n    }\r\n\r\n    ToInfo() {\r\n        if (!PageStore.information){\r\n            PageStore.home = false;\r\n            PageStore.information = true;\r\n            PageStore.login = false;\r\n            PageStore.register = false;\r\n            PageStore.admin = false;\r\n            PageStore.profile = false;\r\n        }\r\n    }\r\n\r\n    ToLogin() {\r\n        if (!PageStore.login){\r\n            PageStore.home = false;\r\n            PageStore.information = false;\r\n            PageStore.login = true;\r\n            PageStore.register = false;\r\n            PageStore.admin = false;\r\n            PageStore.profile = false;\r\n        }\r\n    }\r\n\r\n    ToRegister() {\r\n        if (!PageStore.register){\r\n            PageStore.home = false;\r\n            PageStore.information = false;\r\n            PageStore.login = false;\r\n            PageStore.register = true;\r\n            PageStore.admin = false;\r\n            PageStore.profile = false;\r\n        }\r\n    }\r\n\r\n    ToAdmin() {\r\n        if (!PageStore.admin){\r\n            PageStore.home = false;\r\n            PageStore.information = false;\r\n            PageStore.login = false;\r\n            PageStore.register = false;\r\n            PageStore.admin = true;\r\n            PageStore.profile = false;\r\n        }\r\n    }\r\n\r\n    ToProfile() {\r\n        if (!PageStore.profile){\r\n            PageStore.home = false;\r\n            PageStore.information = false;\r\n            PageStore.login = false;\r\n            PageStore.register = false;\r\n            PageStore.admin = false;\r\n            PageStore.profile = true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (UserStore.isLoggedIn) {\r\n            if (UserStore.admin) {\r\n            return (\r\n                <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">LifeSaverVR</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        <Nav.Link onClick={ () => this.ToHome() } href=\"#home\">HOME</Nav.Link>\r\n                        <Nav.Link onClick={ () => this.ToInfo() } href=\"#info\">INFORMATION</Nav.Link>\r\n                        <Nav.Link onClick={ () => this.ToProfile() } href=\"#profile\">{UserStore.username}'s Profile</Nav.Link>\r\n                        <Nav.Link onClick={ () => this.ToAdmin() } href=\"#admin\">Admin</Nav.Link>\r\n                        </Nav>\r\n                        <Modalfunct />\r\n                        <SubmitButton\r\n                        text={'Log Out'}\r\n                        disabled={false}\r\n                        onClick={ () => this.doLogout() }\r\n                        />    \r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                );\r\n            }\r\n            else{\r\n                return (\r\n                    <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\">LifeSaverVR</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={ () => this.ToHome() } href=\"#home\">HOME</Nav.Link>\r\n                            <Nav.Link onClick={ () => this.ToInfo() } href=\"#info\">INFORMATION</Nav.Link>\r\n                            <Nav.Link onClick={ () => this.ToProfile() } href=\"#profile\">{UserStore.username}'s Profile</Nav.Link>\r\n                            </Nav>\r\n                            <Modalfunct />\r\n                            <SubmitButton\r\n                            text={'Log Out'}\r\n                            disabled={false}\r\n                            onClick={ () => this.doLogout() }\r\n                            />   \r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    );\r\n            }\r\n            }\r\n            else {\r\n                return (\r\n                    <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand href=\"#home\">LifeSaverVR</Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                            <Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={ () => this.ToHome() } href=\"#home\">HOME</Nav.Link>\r\n                            <Nav.Link onClick={ () => this.ToInfo() } href=\"#info\">INFORMATION</Nav.Link>\r\n                            </Nav>\r\n                            <SubmitButton\r\n                            text={'Log In'}\r\n                            disabled={false}\r\n                            onClick={ () => this.ToLogin() }\r\n                            /> \r\n                            <SubmitButton\r\n                            text={'Register'}\r\n                            disabled={false}\r\n                            onClick={ () => this.ToRegister() }\r\n                            /> \r\n                            <Modalfunct />\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                    );\r\n            }\r\n        }\r\n    }\r\n\r\nexport default NavbarLogin;\r\n","import React, { useState } from 'react';\r\nimport UserStore from '../stored/UserStore';\r\nimport { observer } from 'mobx-react';\r\nimport LoginForm from '../LoginForm';\r\nimport ParticleMaker from '../ParticleMaker';\r\nimport ParticleMaker2 from '../ParticleMaker2';\r\nimport NavbarLogin from '../NavbarLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SubmitButton from '../SubmitButton';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { Image } from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\n\r\nclass Information extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"info\">\r\n            <div className=\"infobox1\">\r\n                <Jumbotron>\r\n                    <h2 className=\"Title2\">LifeSaverVR</h2>\r\n                    <p className=\"heading\">Current Version = 1.0</p>\r\n                    <br></br>\r\n                    <h2 className=\"Title2\">Link to Download</h2>\r\n                    <p className=\"othertext\"><a href=\"https://github.com/SeanMcSweeney/LifeSaverVR-\">github</a></p>\r\n                    <br></br>\r\n                    <h2 className=\"Title2\">What is necessary to use LifeSaverVR</h2>\r\n                    <p className=\"heading\">The following is required.</p>\r\n                    <li className=\"othertext\"> Oculus Quest VR Headset </li>\r\n                    <li className=\"othertext\"> Handtracking Feature Enabled </li>\r\n                    <p className=\"heading\">The following is advised.</p>\r\n                    <li className=\"othertext\"> Large Space to Navigate </li>\r\n                </Jumbotron>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                </div>\r\n                </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Information;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/* react bootstrap imports */\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { Image } from 'react-bootstrap';\r\n\r\n/*images imported */\r\nimport title from '../img/gfx/title.png';\r\nimport mainmenu from '../img/level/mainmenu.png';\r\nimport test from '../img/level/test.png';\r\nimport test2 from '../img/level/test2.png';\r\nimport serveypersonone from '../img/eval/Survey Person1.png';\r\nimport serveypersontwo from '../img/eval/Survey Person2.png';\r\nimport serveypersonthree from '../img/eval/Survey Person3.png';\r\nimport serveypersononeaf from '../img/eval/Survey Person1 After.png';\r\nimport serveypersontwoaf from '../img/eval/Survey Person2 After.png';\r\nimport serveypersonthreeaf from '../img/eval/Survey Person3 After.png';\r\nimport map from '../img/paramedic/map1.png';\r\nimport building1 from '../img/paramedic/building1.jpg';\r\nimport building2 from '../img/paramedic/building2.jpg';\r\nimport building3 from '../img/paramedic/building3.jpg';\r\nimport cpr1 from '../img/paramedic/cpr1.jpg';\r\nimport cpr2 from '../img/paramedic/cpr2.jpg';\r\nimport cpr3 from '../img/paramedic/cpr3.jpg';\r\nimport cpr4 from '../img/paramedic/cpr4.jpg';\r\nimport sign from '../img/paramedic/sign.jpg';\r\nimport bookshelf from '../img/other images/Blender Bookshelf.png';\r\nimport sofa from '../img/other images/Blender.jpg';\r\nimport table from '../img/other images/BlenderTable.png';\r\nimport github from '../img/logos/githubicon.png';\r\n\r\nimport '../App.css';\r\n\r\n\r\nclass Home extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"home\">\r\n            <img src={title} alt=\"title\" width=\"100%\"></img>\r\n            <div className=\"homebox1\">\r\n                <Jumbotron>\r\n                    <h2 className=\"Title2\">LifeSaverVR</h2>\r\n                    <p className=\"heading\">Final Year Project TUD DT211C</p>\r\n                    <br></br>\r\n                    <h2 className=\"Title2\">What is LifeSaverVR</h2>\r\n                    <p className=\"othertext\">LifeSaver is a VR simulation which focuses on training and testing users in the basic fundamentals of lifesaving. \r\n                        It is an immersive experience which utilises handtracking and mixed reality to give the user the best possible experience while training or while being tested. \r\n                        It features multiple different scenes each following the process of basic lifesaving. Whether you are new to CPR or an experienced paramedic LifeSaverVR has something for you.</p>\r\n                    <br></br>\r\n                    <h2 className=\"Title2\">Getting Started</h2>\r\n                    <p className=\"heading\">To use LifeSaver in its full capacity the following is required.</p>\r\n                    <li className=\"othertext\"> Oculus Quest VR Headset </li>\r\n                    <li className=\"othertext\"> Handtracking Feature Enabled </li>\r\n                    <li className=\"othertext\"> Large Space to Navigate </li>\r\n                </Jumbotron>\r\n                <br></br>\r\n\r\n                <p className=\"headingwhite\"> Level Images </p>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Main Menu Level </p>\r\n                        <Image src={mainmenu} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Test Level </p>\r\n                        <Image src={test} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Test Level Top View </p>\r\n                        <Image src={test2} fluid />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <Jumbotron>\r\n                    <h2 className=\"Title2\">Does LifeSaverVR Work</h2>\r\n                    <p className=\"othertext\">LifeSaverVR has been evaluated by users and in every case the user has become more aware of the necessary steps to perform basic life saving.</p>\r\n                    <br></br>\r\n                    <h2 className=\"Title2\">Can I Trust The Steps?</h2>\r\n                    <p className=\"othertext\">Every step in LifeSaverVR has been influenced by the american heart association (aha) and approved by paramedics.</p>\r\n                </Jumbotron>\r\n                <br></br>\r\n\r\n                <p className=\"headingwhite\"> Evaluation Images </p>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Person One Before LifeSaverVR </p>\r\n                        <Image src={serveypersonone} className=\"imgfix\" fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Person Two Before LifeSaverVR </p>\r\n                        <Image src={serveypersontwo} className=\"imgfix\" fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Person Three Before LifeSaverVR </p>\r\n                        <Image src={serveypersonthree} className=\"imgfix\" fluid />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Person One After LifeSaverVR </p>\r\n                        <Image src={serveypersononeaf} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Person Two After LifeSaverVR </p>\r\n                        <Image src={serveypersontwoaf} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Person Three After LifeSaverVR </p>\r\n                        <Image src={serveypersonthreeaf} fluid />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n\r\n                <p className=\"headingwhite\"> Paramedic images </p>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Dublin Fire Brigafe Training Centre Image 1 </p>\r\n                        <Image src={building1} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Dublin Fire Brigafe Training Centre Image 2 </p>\r\n                        <Image src={building2} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Dublin Fire Brigafe Training Centre Image 3 </p>\r\n                        <Image src={building3} fluid />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> CPR Example 1 </p>\r\n                        <Image src={cpr1} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> CPR Example 2 </p>\r\n                        <Image src={cpr2} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> CPR Example 3 </p>\r\n                        <Image src={cpr3} fluid />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> CPR Example 4 </p>\r\n                        <Image src={cpr4} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Dublin Fire Brigafe Training Centre Map </p>\r\n                        <Image src={map} fluid />\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <p className=\"othertextwhite\"> Dublin Fire Brigafe Training Centre Sign </p>\r\n                        <Image src={sign} fluid />\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n\r\n                <Jumbotron>\r\n                    <h2 className=\"Title2\">Where did the resources come from?</h2>\r\n                    <p className=\"othertext\">All of the resources from LifeSaverVR were created and/or changed to fit the projects plan</p>\r\n                    <br></br>\r\n                    <h2 className=\"Title2\">How can I try LifeSaverVR?</h2>\r\n                    <p className=\"othertext\">LifeSaverVR is currently only available on github to select individuals and will hopefully be available on the oculus store in the future</p>\r\n                </Jumbotron>\r\n                <br></br>\r\n\r\n                <p className=\"headingwhite\"> Development of Assets Using Blender</p>\r\n                <Carousel>\r\n                    <Carousel.Item>\r\n                        <img\r\n                        className=\"imgslider\"\r\n                        src={bookshelf}\r\n                        alt=\"bookshelf\"\r\n                        />\r\n                        <Carousel.Caption>\r\n                        <h3>Blender Bookshelf</h3>\r\n                        <p>A basic bookshelf created in blender</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                        className=\"imgslider\"\r\n                        src={sofa}\r\n                        alt=\"sofa\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                        <h3>Blender Sofa</h3>\r\n                        <p>A basic sofa created in blender</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <img\r\n                        className=\"imgslider\"\r\n                        src={table}\r\n                        alt=\"table\"\r\n                        />\r\n\r\n                        <Carousel.Caption>\r\n                        <h3>Blender Table</h3>\r\n                        <p>A basic table created in blender</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    </Carousel>\r\n                    <br></br>\r\n\r\n                    <p className=\"headingwhite\"> Download Here</p>\r\n                    <a href=\"https://github.com/SeanMcSweeney/LifeSaverVR-\">\r\n                    <Image className=\"git\" src={github} fluid/>\r\n                    </a>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import { extendObservable } from 'mobx';\r\n\r\n/**\r\n * User Store\r\n */\r\n\r\nclass AllUsers {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            username: '',\r\n            email: '',\r\n            admin: '',\r\n            aboutme: ''\r\n\r\n        })\r\n    }\r\n}\r\nexport default new AllUsers();","import React from 'react';\r\nimport InputField from '../InputField';\r\nimport SubmitButton from '../SubmitButton';\r\nimport AllUsers from '../stored/AllUsers';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\n/* react bootstrap imports */\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass Admin extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            admin: '',\r\n            aboutme: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    async SearchUser() {\r\n\r\n        if (!this.state.username){\r\n            alert(\"enter a user\")\r\n            return;\r\n        }\r\n        try {\r\n\r\n            let res = await fetch('/grabuser', {\r\n            method: 'post',\r\n            headers: {\r\n            'Accept' : 'application/json',\r\n            'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username\r\n            })\r\n        });\r\n    \r\n        let result = await res.json();\r\n\r\n        if (result && result.success){\r\n            AllUsers.username = result.username;\r\n            AllUsers.email = result.email;\r\n            AllUsers.admin = result.admin;\r\n            AllUsers.aboutme = result.aboutme;\r\n            console.log(AllUsers.aboutme);\r\n            alert(\"user found\");\r\n        }\r\n    \r\n        else {\r\n            console.log(\"error user not found\");\r\n        }\r\n    \r\n        }\r\n    \r\n        catch(e){\r\n        console.log(\"404 error\")\r\n        }\r\n    }\r\n\r\n    async deleteUser(){\r\n        try {\r\n\r\n        if (!AllUsers.username){\r\n            alert(\"no user selected\")\r\n            return;\r\n        }\r\n        else{\r\n            let res = await fetch('/deleteuser', {\r\n            method: 'post',\r\n            headers: {\r\n            'Accept' : 'application/json',\r\n            'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: AllUsers.username\r\n            })\r\n            });\r\n    \r\n            let result = await res.json();\r\n\r\n            if (result && result.success){\r\n                AllUsers.username = '';\r\n                AllUsers.email = '';\r\n                AllUsers.admin = '';\r\n                AllUsers.aboutme = '';\r\n                this.state.username = '';\r\n                this.state.email = '';\r\n                this.state.admin = '';\r\n                this.state.aboutme = '';\r\n                alert(\"user deleted\");\r\n                window.location.reload();\r\n            }\r\n    \r\n            else {\r\n                console.log(\"error user not found\")\r\n            }\r\n        }\r\n    \r\n        }\r\n    \r\n        catch(e){\r\n        console.log(\"404 error\")\r\n        }\r\n    }\r\n\r\n    async editUser(){\r\n        try {\r\n\r\n        if(!this.state.email){\r\n            alert(\"email empty\")\r\n            return;\r\n        }\r\n        else if(!this.state.admin){\r\n            alert(\"admin empty\")\r\n            return;\r\n        }\r\n        else if(!this.state.aboutme){\r\n            alert(\"aboutme empty\")\r\n            return;\r\n        }\r\n        else{\r\n            let res = await fetch('/edituser', {\r\n            method: 'post',\r\n            headers: {\r\n            'Accept' : 'application/json',\r\n            'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: AllUsers.username,\r\n                admin: this.state.admin,\r\n                aboutme: this.state.aboutme,\r\n                email: this.state.email\r\n            })\r\n            });\r\n    \r\n            let result = await res.json();\r\n\r\n            if (result && result.success){\r\n                AllUsers.username = result.username;\r\n                AllUsers.email = result.email;\r\n                AllUsers.admin = result.admin;\r\n                AllUsers.aboutme = result.aboutme;\r\n                alert(\"user changed\");\r\n                window.location.reload();\r\n            }\r\n    \r\n            else {\r\n                console.log(\"error user not found\")\r\n            }\r\n        }\r\n    \r\n        }\r\n    \r\n        catch(e){\r\n        console.log(\"404 error\")\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 20) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"admin\">\r\n                <Jumbotron>\r\n                    <h2 className=\"Title2\">Admin Page</h2>\r\n                    <p className=\"heading\">Find User</p>\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder=' Enter username'\r\n                        value={this.state.username ? this.state.username : ''}\r\n                        onChange={ (val) => this.setInputValue('username', val) }\r\n                    />\r\n                    <SubmitButton\r\n                        text='Find User'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.SearchUser() }\r\n                    /> \r\n                </Jumbotron>\r\n                <br></br>\r\n                <Jumbotron>\r\n                <p className=\"heading\">User Info</p>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>About</th>\r\n                            <th>Admin</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                        <p>{AllUsers.username}</p>\r\n                        </td>\r\n                        <td>\r\n                        <p>{AllUsers.email}</p>\r\n                        </td>\r\n                        <td>\r\n                        <p>{AllUsers.aboutme}</p>  \r\n                        </td>\r\n                        <td>\r\n                        <p>{AllUsers.admin}</p> \r\n                        </td>\r\n                        <td>\r\n                        <SubmitButton\r\n                        text='Delete User'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.deleteUser() }\r\n                        /> \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                        <p>Not Changeable</p>\r\n                        </td>\r\n                        <td>\r\n                        <InputField\r\n                        type='text'\r\n                        placeholder='New user email'\r\n                        value={this.state.email ? this.state.email : ''}\r\n                        onChange={ (val) => this.setInputValue('email', val) }\r\n                        /> \r\n                        </td>\r\n                        <td>\r\n                        <InputField\r\n                        type='text'\r\n                        placeholder='New user about'\r\n                        value={this.state.aboutme ? this.state.aboutme : ''}\r\n                        onChange={ (val) => this.setInputValue('aboutme', val) }\r\n                        />    \r\n                        </td>\r\n                        <td>\r\n                        <InputField\r\n                        type='text'\r\n                        placeholder='New user admin (yes/no)'\r\n                        value={this.state.admin ? this.state.admin : ''}\r\n                        onChange={ (val) => this.setInputValue('admin', val) }\r\n                        />    \r\n                        </td>\r\n                        <td>\r\n                        <SubmitButton\r\n                        text='Edit User'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.editUser() }\r\n                        /> \r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                </Jumbotron>\r\n                <br></br>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport UserStore from '../stored/UserStore';\r\nimport InputField from '../InputField';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SubmitButton from '../SubmitButton';\r\n\r\nimport '../App.css';\r\n\r\n\r\nclass Profile extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            passwordold: '',\r\n            passwordnew: '',\r\n            aboutme: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 20) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            passwordold: '',\r\n            passwordnew: '',\r\n            aboutme: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async AboutMe(){\r\n        if (!this.state.aboutme) {\r\n            alert(\"You must enter something about yourself\");\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res = await fetch('/aboutme', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    aboutme: this.state.aboutme,\r\n                })\r\n            });\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                alert(\"your aboutme section has been changed\");\r\n                window.location.reload();\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n\r\n    async ChangePassword(){\r\n        if (!this.state.passwordold) {\r\n            alert(\"You must enter your old password\");\r\n            return;\r\n        }\r\n        else if (!this.state.passwordnew) {\r\n            alert(\"You must enter a new password\");\r\n            return;\r\n        }\r\n\r\n        if (this.state.passwordnew == this.state.passwordold) {\r\n            alert(\"You must choose a new password\");\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res = await fetch('/changepwd', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    passwordold: this.state.passwordold,\r\n                    passwordnew: this.state.passwordnew,\r\n                })\r\n            });\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                alert(\"your password has been updated\");\r\n                window.location.reload();\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <div className=\"home\">\r\n            <div className=\"container3\">\r\n                    <p className=\"heading\">UserName</p>\r\n                    <p className=\"othertext\">{UserStore.username}</p>\r\n                    <br></br>\r\n                    <p className=\"heading\">About Me</p>\r\n                    <p className=\"othertext\">{UserStore.aboutme}</p>\r\n                    <br></br>\r\n\r\n                    <p className=\"heading\">Change About Me</p>\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder=' Enter something about yourself (keep it short and sweet)'\r\n                        value={this.state.aboutme ? this.state.aboutme : ''}\r\n                        onChange={ (val) => this.setInputValue('aboutme', val) }\r\n                    />\r\n                    <SubmitButton\r\n                        text='Change About Me'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.AboutMe() }\r\n                    /> \r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    <p className=\"heading\">Change Password</p>\r\n                    <InputField\r\n                        type='password'\r\n                        placeholder='Old Password'\r\n                        value={this.state.passwordold ? this.state.passwordold: ''}\r\n                        onChange={ (val) => this.setInputValue('passwordold', val) }\r\n                    />\r\n                    <InputField\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        value={this.state.passwordnew ? this.state.passwordnew : ''}\r\n                        onChange={ (val) => this.setInputValue('passwordnew', val) }\r\n                    />\r\n                    <SubmitButton\r\n                        text='Change Password'\r\n                        disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.ChangePassword() }\r\n                    />   \r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport UserStore from './stored/UserStore';\r\nimport PageStore from './stored/PageStore';\r\nimport { observer } from 'mobx-react';\r\nimport LoginForm from './LoginForm';\r\nimport Register from './Register';\r\nimport Info from './MainPages/Information';\r\nimport Home from './MainPages/Home';\r\nimport Admin from './MainPages/Admin';\r\nimport Profile from './MainPages/Profile';\r\nimport ParticleMaker from './ParticleMaker';\r\nimport ParticleMaker2 from './ParticleMaker2';\r\nimport NavbarLogin from './NavbarLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SubmitButton from './SubmitButton';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { Toast } from 'react-bootstrap';\r\nimport './App.css';\r\n\r\n/* Main page */\r\n/* All code inspired by https://medium.com/@avanthikameenakshi/crud-react-express-99025f03f06e, youtube series starting at: https://www.youtube.com/watch?v=4BhhGs0PFHU&t=1137s&pbjreload=10 \r\nand https://reactjs.org/docs/faq-ajax.html as well as the bootstrap-react documentation and the react documentation*/\r\n\r\nclass App extends React.Component{\r\n\r\n  async componentDidMount(){\r\n\r\n    try {\r\n\r\n      let res = await fetch('/isLoggedIn', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      });\r\n\r\n      let result = await res.json();\r\n\r\n      if (result && result.success){\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n        UserStore.aboutme = result.aboutme;\r\n        if (result.admin == \"yes\"){\r\n          console.log(result.admin);\r\n          UserStore.admin = true;\r\n          PageStore.admin = true;\r\n\r\n        }\r\n        else{\r\n          console.log(result.admin);\r\n          UserStore.admin = false;\r\n          PageStore.admin = false;\r\n        }\r\n      }\r\n\r\n      else {\r\n        UserStore.loading = false;\r\n        UserStore.isLoggedIn = false;\r\n      }\r\n\r\n    }\r\n\r\n    catch(e){\r\n      UserStore.loading = false;\r\n      UserStore.isLoggedIn = false;\r\n    }\r\n\r\n  }\r\n\r\n  async doLogout(){\r\n\r\n    try {\r\n\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept' : 'application/json',\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      });\r\n\r\n      let result = await res.json();\r\n\r\n      if (result && result.success){\r\n        UserStore.isLoggedIn = false;\r\n        UserStore.username = '';\r\n        window.location.reload();\r\n      }\r\n      \r\n    }\r\n\r\n    catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  }\r\n  render() {\r\n    if (UserStore.loading) {\r\n      return (\r\n        <div className=\"app\">\r\n          <div className=\"infobox1\">\r\n            Loading, please wait.. <Spinner animation=\"grow\" variant=\"secondary\" />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else {\r\n      if (UserStore.isLoggedIn) {\r\n        if (PageStore.home) {\r\n          return (\r\n            <div className=\"app\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                <h2 className=\"heading\"> Welcome {UserStore.username} </h2>\r\n                  <Home/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (PageStore.information) {\r\n          return (\r\n            <div className=\"app\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <Info/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (PageStore.admin) {\r\n          return (\r\n            <div className=\"app\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <Admin/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (PageStore.profile) {\r\n          return (\r\n            <div className=\"wrapper\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <Profile/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      else{   \r\n        if (PageStore.home) {\r\n          return (\r\n            <div className=\"wrapper\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <Home/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (PageStore.information) {\r\n          return (\r\n            <div className=\"app\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <Info/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (PageStore.login) {\r\n          return (\r\n            <div className=\"wrapper\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <LoginForm/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        if (PageStore.register) {\r\n          return (\r\n            <div className=\"wrapper\"> \r\n              <NavbarLogin />\r\n                <div className=\"app\"> \r\n                  <Register/>\r\n                </div>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}